//##############################################################################################################################################################
//##############################################################################################################################################################
float cbrt(float V) {
    return sign(V) * pow(abs(V), 1.0/3.0);
}

//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
float sRGB_to_Linear(float C) {return mix( (C/12.92),    pow((C + 0.055) / 1.055,      2.4 ),    step(0.04044823627710820, C));}
vec3  sRGB_to_Linear(vec3  C) {return mix( (C/12.92),    pow((C + 0.055) / 1.055, vec3(2.4)),    step(0.04044823627710820, C));}

float Linear_to_sRGB(float C) {return mix( (C*12.92),    pow(C,      1.0/2.4 )*1.055 - 0.055,    step(0.00313066844250063, C));}
vec3  Linear_to_sRGB(vec3  C) {return mix( (C*12.92),    pow(C, vec3(1.0/2.4))*1.055 - 0.055,    step(0.00313066844250063, C));}

//##############################################################################################################################################################
//##############################################################################################################################################################
float sRGB_to_Lin(float C) {return (C <= 0.04044823627710820) ? (C / 12.92) : pow((C+0.055) / 1.055, 2.4);}

vec3 sRGB_to_Lin(vec3 C) {return vec3(
    (C.r <= 0.04044823627710820) ? (C.r / 12.92) : pow((C.r+0.055) / 1.055, 2.4),
    (C.g <= 0.04044823627710820) ? (C.g / 12.92) : pow((C.g+0.055) / 1.055, 2.4),
    (C.b <= 0.04044823627710820) ? (C.b / 12.92) : pow((C.b+0.055) / 1.055, 2.4)
);}

vec4 sRGB_to_Lin(vec4 C) {return vec4(
    (C.r <= 0.04044823627710820) ? (C.r / 12.92) : pow((C.r+0.055) / 1.055, 2.4),
    (C.g <= 0.04044823627710820) ? (C.g / 12.92) : pow((C.g+0.055) / 1.055, 2.4),
    (C.b <= 0.04044823627710820) ? (C.b / 12.92) : pow((C.b+0.055) / 1.055, 2.4),
     C.a
);}

//==============================================================================================================================================================
float Lin_to_sRGB(float C) {return (C <= 0.00313066844250063) ? (C * 12.92) : pow(C, 1.0/2.4)*1.055 - 0.055;}

vec3 Lin_to_sRGB(vec3 C) {return vec3(
    (C.r <= 0.00313066844250063) ? (C.r * 12.92) : pow(C.r, 1.0/2.4)*1.055 - 0.055,
    (C.g <= 0.00313066844250063) ? (C.g * 12.92) : pow(C.g, 1.0/2.4)*1.055 - 0.055,
    (C.b <= 0.00313066844250063) ? (C.b * 12.92) : pow(C.b, 1.0/2.4)*1.055 - 0.055
);}

vec4 Lin_to_sRGB(vec4 C) {return vec4(
    (C.r <= 0.00313066844250063) ? (C.r * 12.92) : pow(C.r, 1.0/2.4)*1.055 - 0.055,
    (C.g <= 0.00313066844250063) ? (C.g * 12.92) : pow(C.g, 1.0/2.4)*1.055 - 0.055,
    (C.b <= 0.00313066844250063) ? (C.b * 12.92) : pow(C.b, 1.0/2.4)*1.055 - 0.055,
     C.a
);}

//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
//##############################################################################################################################################################
float ToBrightness(vec3 C) {
    return C.r * 0.2126
         + C.g * 0.7152
         + C.b * 0.0722;
}

//##############################################################################################################################################################
//##############################################################################################################################################################
float ToLightness(vec3 C) {
    return 0.2104542553 * cbrt(0.4122214708*C.r + 0.5363325363*C.g + 0.0514459929*C.b)
         + 0.7936177850 * cbrt(0.2119034982*C.r + 0.6806995451*C.g + 0.1073969566*C.b)
         - 0.0040720468 * cbrt(0.0883024619*C.r + 0.2817188376*C.g + 0.6299787005*C.b);
}

//==============================================================================================================================================================
vec3 Lin_to_OkLab(vec3 C) {
    C = vec3(
        cbrt(0.4122214708*C.r + 0.5363325363*C.g + 0.0514459929*C.b),
        cbrt(0.2119034982*C.r + 0.6806995451*C.g + 0.1073969566*C.b),
        cbrt(0.0883024619*C.r + 0.2817188376*C.g + 0.6299787005*C.b)
    );
    return vec3(
        0.2104542553*C.x + 0.7936177850*C.y - 0.0040720468*C.z,
        1.9779984951*C.x - 2.4285922050*C.y + 0.4505937099*C.z,
        0.0259040371*C.x + 0.7827717662*C.y - 0.8086757660*C.z
    );
}

//==============================================================================================================================================================
vec3 OkLab_to_Lin(vec3 C) {
    C = vec3(
        C.x + 0.3963377774f*C.y + 0.2158037573f*C.z,
        C.x - 0.1055613458f*C.y - 0.0638541728f*C.z,
        C.x - 0.0894841775f*C.y - 1.2914855480f*C.z
    );
    C *= C*C;
    return vec3(
         4.0767416621*C.x - 3.3077115913*C.y + 0.2309699292*C.z,
        -1.2684380046*C.x + 2.6097574011*C.y - 0.3413193965*C.z,
        -0.0041960863*C.x - 0.7034186147*C.y + 1.7076147010*C.z
    );
}
